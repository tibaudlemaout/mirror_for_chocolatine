name: chocolatine
run-name: ${{ github.actor}} trying to set up error annotations

on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-DOP-200-NAN-2-1-chocolatine-tibaud.le-maout.git"
  EXECUTABLES: "binary"

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      name: checkout current repo
        uses: actions/checkout@v3
        run: echo ${GITHUB_REF}
      name: execute coding style
        run: |
          check.sh $(pwd) $(pwd) | cat coding-style-reports.log
      - run: echo ::error file=coding-style-reports.log,line=1,endLine=10,title=MAJOR/MINOR coding style error::error reference
      name: print error annotations
        # run: |
        #     if [ -s "coding-style-reports.log" ]; then
        #       cat coding-style-reports.log | grep -v '^$' | while read line ; do echo "::error:: title =MAJOR/MINOR coding style error,$line" ; done
        #       exit 1 ;
        #     fi

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
      - run: echo ${GITHUB_REF}
      - run: make
        timeout-minutes: 2
      - run: make clean

  run_test:
    needs: [check_coding_style, check_program_compilation]
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
      - run: echo ${GITHUB_REF}
      - run: make test_run
        timeout-minutes: 2

  push_to_mirror:
    needs: [check_coding_style, check_program_compilation, run_test]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo ${GITHUB_REF}
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            $ {{ env.MIRROR_URL }}
          ssh_repository_key:
            $ {{ secrets.mirror_key}}
